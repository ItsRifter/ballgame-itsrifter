
@BaseClass = BaseProperties_local_ballgame
[
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	parentAttachmentName(parentAttachment) [ group="Hierarchy" ] : "Parent Model Bone/Attachment Name" : : "The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."

	useLocalOffset(boolean) [ group="Hierarchy" ] : "Use Model Attachment offsets" : 0 : "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
	local.origin(vector) [ group="Hierarchy" ] : "Model Attachment position offset" : : "Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
	local.angles(angle) [ group="Hierarchy" ] : "Model Attachment angular offset" : : "Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
	local.scales(vector) [ group="Hierarchy" ] : "Model Attachment scale" : : "Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."

	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	tags(tags) : "Tags" : "" : "A list of general purpose tags for this entity, for interactions with other entities such as triggers."
]

//
// Ballers.BallSpawn
//
@PointClass base(BaseProperties_local_ballgame) editormodel( "models/editor/ball.vmdl", fixedbounds ) 
metadata
{
	entity_tool_name = "Ball Spawnpoint"
	entity_tool_group = "Balls"
	entity_tool_tip = "Spawnpoint for balls"
}
= info_ball_start : ""
[
	index(integer) : "Index" : 0 : "Used for linking checkpoint, set to 0 for initial spawn."
]

//
// Ballers.BumperBrush
//
@PointClass base(BaseProperties_local_ballgame) tags( SupportsSolids ) = func_bumper : ""
[
	force(float) : "Force" : "500" : ""
	pitch(float) : "Pitch" : "1" : ""
	enable_shadows(boolean) { group = "Rendering" } : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : "Sets the color of this entity. Format is '255 255 255 255'."
]

//
// Ballers.CheckpointBrush
//
@PointClass base(BaseProperties_local_ballgame) tags( SupportsSolids ) 
metadata
{
	auto_apply_material = "materials/tools/toolstrigger.vmat"
}
= func_checkpoint : ""
[
	index(integer) : "Index" : 0 : "Used for checkpoint order and for linking spawnpoints. Do not use 0 for this, start with 1."
	enable_shadows(boolean) { group = "Rendering" } : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : "Sets the color of this entity. Format is '255 255 255 255'."
]

//
// Ballers.HurtBrush
//
@PointClass base(BaseProperties_local_ballgame) tags( SupportsSolids ) 
metadata
{
	auto_apply_material = "materials/tools/toolstrigger.vmat"
}
= trigger_death : "Used for killing ballers"
[
	requirecollision(boolean) : "Require Collision" : 0 : "Set to true if baller has to collide with a solid to die in this zone, use for fall damage deaths etc."
	enable_shadows(boolean) { group = "Rendering" } : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : "Sets the color of this entity. Format is '255 255 255 255'."
]

//
// Ballers.MovingBrush
//
@PointClass base(BaseProperties_local_ballgame) = func_movelinear : ""
[
	origin(vector) : "Start Position" :  : ""
	angles(angle) : "Start Angles" :  : ""
	speed(float) : "Speed" : 0 : ""
	movedistance(float) : "Move Distance" : 0 : ""
	movedir(angle) : "Move Angles" :  : ""
	enable_shadows(boolean) { group = "Rendering" } : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input SetColor(string) : "Sets the color of this entity. Format is '255 255 255 255'."
]

